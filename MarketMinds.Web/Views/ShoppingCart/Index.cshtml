@model List<SharedClassLibrary.Domain.Product>
@{
    ViewData["Title"] = "My Cart";
}

<div class="bg-gray-100 min-h-screen p-6">
    <div class="max-w-6xl mx-auto bg-white rounded-lg shadow-md p-6">
        <h1 class="text-3xl font-bold text-center text-blue-800 mb-6">My Cart</h1>
        <hr class="border-b border-blue-800 mb-6">

        @if (Model == null || !Model.Any())
        {
                <div class="text-center py-10">
                    <p class="text-gray-500 text-xl">Your cart is empty</p>
                    <a href="@Url.Action("Index", "Home")" class="inline-block mt-4 px-6 py-2 bg-blue-800 text-white rounded hover:bg-blue-600 transition">
                        Continue Shopping
                    </a>
                </div>
        }
        else
        {
                <div class="mb-4">
                    <button id="purchase-btn" class="bg-blue-800 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded">
                        Checkout
                    </button>
                </div>

                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead>
                            <tr class="text-left">
                                <th class="py-2 w-1/3">Product</th>
                                <th class="py-2 text-center">Price</th>
                                <th class="py-2 text-center">Quantity</th>
                                <th class="py-2 text-right">Total</th>
                                <th class="py-2 text-right">Action</th>
                            </tr>
                        </thead>
                        <tbody id="cart-items">
                        @foreach (var item in Model)
                        {
                                <tr class="border-t product-row" data-product-id="@item.ProductId">
                                    <td class="py-4 text-blue-800 font-medium">@item.Name</td>
                                    <td class="py-4 text-center">@item.Price.ToString("C")</td>
                                    <td class="py-4 text-center">
                                        <div class="flex items-center justify-center">
                                            <button class="quantity-btn minus-btn px-2 py-1 bg-gray-200 rounded-l" data-product-id="@item.ProductId">-</button>
                                            <input type="number" class="quantity-input w-12 text-center border-0 bg-gray-100" 
                                                   value="@item.Stock" min="1" data-product-id="@item.ProductId">
                                            <button class="quantity-btn plus-btn px-2 py-1 bg-gray-200 rounded-r" data-product-id="@item.ProductId">+</button>
                                        </div>
                                    </td>
                                    <td class="py-4 text-right item-total" data-product-id="@item.ProductId">
                                    @((item.Price * item.Stock).ToString("C"))
                                    </td>
                                    <td class="py-4 text-right">
                                        <button type="button" class="remove-item-btn bg-blue-800 hover:bg-blue-700 text-white py-1 px-4 rounded" 
                                                data-product-id="@item.ProductId">
                                            Remove
                                        </button>
                                    </td>
                                </tr>
                        }
                        </tbody>
                        <tfoot>
                            <tr class="border-t">
                                <td colspan="3" class="py-4 text-right font-bold">Total:</td>
                                <td class="py-4 text-right font-bold" id="cart-total">@ViewBag.CartTotal.ToString("C")</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
        }
    </div>
</div>

@section Scripts {
        <script>
            $(document).ready(function() {
                // Handle quantity buttons
                $(".quantity-btn").click(function() {
                    const productId = $(this).data("product-id");
                    const input = $(`input.quantity-input[data-product-id="${productId}"]`);
                    let quantity = parseInt(input.val());

                    if ($(this).hasClass("plus-btn")) {
                        quantity += 1;
                    } else if ($(this).hasClass("minus-btn")) {
                        if (quantity > 1) quantity -= 1;
                    }

                    input.val(quantity);
                    updateCartItemQuantity(productId, quantity);
                });

                // Handle direct input changes
                $(".quantity-input").change(function() {
                    const productId = $(this).data("product-id");
                    let quantity = parseInt($(this).val());

                    if (isNaN(quantity) || quantity < 1) {
                        quantity = 1;
                        $(this).val(1);
                    }

                    updateCartItemQuantity(productId, quantity);
                });

                // Purchase button action
                $("#purchase-btn").click(function() {
                    window.location.href = '@Url.Action("Checkout", "ShoppingCart")';
                });

                // Remove item button action (using AJAX)
                $(document).on("click", ".remove-item-btn", function() {
                    const productId = $(this).data("product-id");

                    $.ajax({
                        url: '@Url.Action("RemoveFromCart", "ShoppingCart")',
                        type: 'POST',
                        data: { productId: productId },
                        success: function(response) {
                            // Remove the row without refreshing the page
                            $(`.product-row[data-product-id="${productId}"]`).fadeOut(300, function() {
                                $(this).remove();

                                // Check if cart is now empty
                                if ($("#cart-items tr").length === 0) {
                                    location.reload(); // Refresh to show empty cart message
                                } else {
                                    // Update cart total by requesting current total
                                    $.ajax({
                                        url: '@Url.Action("GetCartTotal", "ShoppingCart")',
                                        type: 'GET',
                                        success: function(totalResponse) {
                                            $("#cart-total").text(totalResponse);
                                        }
                                    });
                                }
                            });
                        },
                        error: function() {
                            alert('An error occurred while removing the item.');
                        }
                    });
                });

                // Function to update cart item quantity via AJAX
                function updateCartItemQuantity(productId, quantity) {
                    $.ajax({
                        url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
                        type: 'POST',
                        data: { productId: productId, quantity: quantity },
                        dataType: 'json',
                        success: function(response) {
                            if (response.success) {
                                $(`td.item-total[data-product-id="${productId}"]`).text(response.itemTotal);
                                $("#cart-total").text(response.total);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while updating the quantity.');
                        }
                    });
                }
            });
        </script>
}
