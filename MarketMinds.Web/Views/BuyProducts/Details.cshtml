@model MarketMinds.Shared.Models.BuyProduct
@using MarketMinds.Shared.Services

@{
    ViewData["Title"] = $"Product Details: {Model.Title}";
    
    // Add user role check similar to _Layout.cshtml
    bool isAuthenticated = User.Identity?.IsAuthenticated == true && UserSession.CurrentUserId.HasValue;
    
    int userType = 0;
    if (isAuthenticated && !string.IsNullOrEmpty(UserSession.CurrentUserRole))
    {
        if (int.TryParse(UserSession.CurrentUserRole, out int parsedType))
        {
            userType = parsedType;
        }
        else
        {
            switch (UserSession.CurrentUserRole)
            {
                case "Admin": userType = 1; break;
                case "Buyer": userType = 2; break;
                case "Seller": userType = 3; break;
                default: userType = 0; break;
            }
        }
    }
    
    bool isAdmin = isAuthenticated && userType == 1;
    bool isBuyer = isAuthenticated && userType == 2;
    bool isSeller = isAuthenticated && userType == 3;
    
    // Check if user can make purchases (admins and buyers)
    bool canPurchase = isAdmin || isBuyer;
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Breadcrumb -->
        <nav class="mb-8">
            <div class="flex items-center space-x-2 text-sm text-gray-500">
                <a href="@Url.Action("Index", "Home")" class="hover:text-blue-600 transition-colors">Home</a>
                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-gray-700 font-medium">@Model.Title</span>
            </div>
        </nav>

        <!-- Main Product Section -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
            <div class="lg:flex">
                <!-- Product Images Section -->
                <div class="lg:w-1/2">
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        <div class="relative bg-gray-100">
                            <div class="aspect-w-1 aspect-h-1 h-96 lg:h-[500px]">
                                <img id="mainImage" src="@Model.Images.First().Url" alt="@Model.Title"
                                    class="w-full h-full object-cover">
                            </div>
                            
                            @if (Model.Images.Count > 1)
                            {
                                <div class="absolute top-4 right-4 bg-black bg-opacity-50 text-white px-3 py-1 rounded-full text-sm">
                                    <span id="imageCounter">1</span> / @Model.Images.Count
                                </div>
                            }
                        </div>

                        @if (Model.Images.Count > 1)
                        {
                            <div class="p-4 bg-white border-t border-gray-200">
                                <div class="flex space-x-3 overflow-x-auto pb-2">
                                    @for (int i = 0; i < Model.Images.Count; i++)
                                    {
                                        var img = Model.Images.ElementAt(i);
                                        <img src="@img.Url" alt="Product thumbnail"
                                            class="h-16 w-16 flex-shrink-0 object-cover rounded-lg cursor-pointer border-2 thumb-image @(i == 0 ? "border-blue-500" : "border-gray-200") hover:border-blue-400 transition-colors"
                                            onclick="setMainImage('@img.Url', @i)" data-index="@i">
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="h-96 lg:h-[500px] bg-gradient-to-br from-gray-100 via-gray-200 to-gray-300 flex items-center justify-center">
                            <div class="text-center">
                                <svg class="mx-auto h-16 w-16 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                <p class="text-gray-500 text-lg">No Image Available</p>
                            </div>
                        </div>
                    }
                </div>

                <!-- Product Information Section -->
                <div class="lg:w-1/2 p-8">
                    <!-- Product Header -->
                    <div class="mb-6">
                        <div class="flex items-start justify-between mb-3">
                            <h1 class="text-3xl font-bold text-gray-900 leading-tight">@Model.Title</h1>
                            <span class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                                </svg>
                                Available
                            </span>
                        </div>
                        
                        <div class="flex items-center flex-wrap gap-x-4 gap-y-2 text-gray-600 mb-4">
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                                </svg>
                                @(Model.Category?.Name ?? "Uncategorized")
                            </div>
                            <div class="flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                @(Model.Condition?.Name ?? "Unknown")
                            </div>
                            @if (Model.Stock > 0)
                            {
                                <div class="flex items-center">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                    </svg>
                                    <span class="@(Model.Stock <= 5 ? "text-orange-600 font-medium" : "")">
                                        @Model.Stock @(Model.Stock == 1 ? "item" : "items") in stock
                                    </span>
                                </div>
                            }
                        </div>
                        
                        <div class="text-4xl font-bold text-blue-600 mb-6">â‚¬@Model.Price.ToString("0.00")</div>
                    </div>

                    <!-- Action Buttons -->
                    @if (canPurchase)
                    {
                        <div class="flex space-x-3 mb-8">
                            <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post" class="flex-1">
                                <input type="hidden" name="productId" value="@Model.Id" />
                                <input type="hidden" name="quantity" value="1" />
                                <button type="submit"
                                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0h10"></path>
                                    </svg>
                                    Add to Cart
                                </button>
                            </form>
                            
                            @{
                                var isInWishlist = ViewBag.WishlistProductIds != null && ((List<int>)ViewBag.WishlistProductIds).Contains(Model.Id);
                            }
                            
                            @if (isInWishlist)
                            {
                                <form asp-controller="BuyerWishlist" asp-action="RemoveFromWishlist" method="post">
                                    <input type="hidden" name="productId" value="@Model.Id" />
                                    <button type="submit" class="bg-red-50 hover:bg-red-100 text-red-500 hover:text-red-600 py-3 px-4 rounded-lg transition-colors border border-red-200" 
                                            title="Remove from Wishlist">
                                        <i class="fas fa-heart text-red-500"></i>
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="BuyerWishlist" asp-action="AddToWishlist" method="post">
                                    <input type="hidden" name="productId" value="@Model.Id" />
                                    <button type="submit" class="bg-gray-50 hover:bg-gray-100 text-gray-600 hover:text-red-500 py-3 px-4 rounded-lg transition-colors border border-gray-200" 
                                            title="Add to Wishlist">
                                        <i class="far fa-heart"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="mb-8">
                            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-yellow-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.996-.833-2.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                    </svg>
                                    <span class="text-yellow-700">Please log in as a buyer to purchase this product.</span>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Product Information Sections -->
                    <div class="space-y-6">
                        <!-- Description -->
                        <div>
                            <h3 class="text-xl font-semibold text-gray-900 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                Description
                            </h3>
                            <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                                <p class="text-gray-700 leading-relaxed">@(Model.Description ?? "No description available for this product.")</p>
                            </div>
                        </div>

                        <!-- Seller Information -->
                        <div>
                            <h3 class="text-xl font-semibold text-gray-900 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                Seller Information
                            </h3>
                            @{
                                var sellerName = "Unknown seller";
                                var sellerId = 0;
                                if (Model.Seller != null)
                                {
                                    var user = Model.Seller as MarketMinds.Shared.Models.User;
                                    if (user != null)
                                    {
                                        sellerName = user.Username ?? sellerName;
                                        sellerId = user.Id;
                                    }
                                }
                            }
                            <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                                <div class="flex items-center justify-between">
                                    <p class="text-gray-700 font-medium">@sellerName</p>
                                    @if (sellerId > 0 && canPurchase)
                                    {
                                        <a asp-controller="Reviews" asp-action="Create" asp-route-sellerId="@sellerId" 
                                           class="inline-flex items-center px-3 py-2 bg-green-600 text-white text-sm font-medium rounded-lg hover:bg-green-700 transition-colors">
                                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                                            </svg>
                                            Leave Review
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Tags -->
                        @if (Model.Tags != null && Model.Tags.Any())
                        {
                            <div>
                                <h3 class="text-xl font-semibold text-gray-900 mb-3 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                                    </svg>
                                    Tags
                                </h3>
                                <div class="flex flex-wrap gap-2">
                                    @foreach (var tag in Model.Tags)
                                    {
                                        <span class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full">
                                            @tag.Title
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Back Button -->
        <div class="mt-8 flex justify-center">
            <a href="javascript:history.back()"
                class="inline-flex items-center px-6 py-3 border border-gray-300 text-gray-700 bg-white rounded-lg hover:bg-gray-50 transition-colors font-medium">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to Products
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function setMainImage(url, index) {
            document.getElementById('mainImage').src = url;
            document.getElementById('imageCounter').textContent = index + 1;
            
            // Update thumbnail borders
            document.querySelectorAll('.thumb-image').forEach((img, i) => {
                if (i === index) {
                    img.classList.remove('border-gray-200');
                    img.classList.add('border-blue-500');
                } else {
                    img.classList.remove('border-blue-500');
                    img.classList.add('border-gray-200');
                }
            });
        }
    </script>
}