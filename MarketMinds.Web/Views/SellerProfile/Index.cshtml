@model WebMarketplace.Models.SellerProfileViewModel
@{
    ViewData["Title"] = "Seller Profile";
    bool isOwnProfile = ViewBag.IsOwnProfile ?? false;
    int? profileSellerId = isOwnProfile ? null : Model.Seller?.User?.Id;
}

<div class="bg-white shadow rounded-lg p-6">
    <div class="flex flex-col md:flex-row justify-between mb-6 pb-6 border-b">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Seller Profile</h1>
            <p class="text-gray-600">@(isOwnProfile ? "Manage your store and products" : "Browse this seller's store")</p>
        </div>
        @if (isOwnProfile)
        {
            <div class="mt-4 md:mt-0 flex space-x-4">
                <a asp-controller="UpdateProfile" asp-action="Index" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                    </svg>
                    Update Profile
                </a>
            </div>
        }
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-50 p-4 border border-green-300 rounded-lg mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-green-800">@TempData["SuccessMessage"]</p>
                </div>
            </div>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-50 p-4 border border-red-300 rounded-lg mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L10 10.414l2.707-2.707a1 1 0 00-1.414-1.414L10 7.586 8.707 6.293z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium text-red-800">@TempData["ErrorMessage"]</p>
                </div>
            </div>
        </div>
    }

    @if (Model.Seller == null)
    {
        <div class="bg-yellow-50 p-4 border border-yellow-300 rounded-lg">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-yellow-800">Seller Profile Not Found</h3>
                    <div class="mt-2 text-sm text-yellow-700">
                        <p>No seller profile was found for this user. This could be because:</p>
                        <ul class="list-disc pl-5 mt-1 space-y-1">
                            <li>You are not logged in as a seller</li>
                            <li>Your seller account has not been created yet</li>
                            <li>There was an error loading your seller information</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Show seller information only if Seller is not null -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Left Column: Store Information -->
            <div class="space-y-6">
                <div class="bg-gray-50 p-6 rounded-lg shadow-sm">
                    <div class="flex justify-between items-start mb-4">
                        <h2 class="text-xl font-semibold">Store Information</h2>
                        
                        <!-- Simple Follow Button - only for buyers viewing other sellers -->
                        @{
                            bool isCurrentUserBuyer = ViewBag.IsCurrentUserBuyer ?? false;
                            var followStatus = ViewBag.FollowStatus as MarketMinds.Shared.Services.BuyerSellerFollowInfo;
                            int? currentUserId = ViewBag.CurrentUserId as int?;
                        }

                        @if (isCurrentUserBuyer && !isOwnProfile && currentUserId.HasValue && profileSellerId.HasValue && currentUserId != profileSellerId)
                        {
                            @if (followStatus?.IsFollowing == true)
                            {
                                <form asp-controller="SellerProfile" asp-action="Unfollow" asp-route-sellerId="@profileSellerId" method="post" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="inline-flex items-center px-3 py-1 bg-red-600 text-white text-sm rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                                        </svg>
                                        Unfollow
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="SellerProfile" asp-action="Follow" asp-route-sellerId="@profileSellerId" method="post" style="display: inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="inline-flex items-center px-3 py-1 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z" />
                                        </svg>
                                        Follow
                                    </button>
                                </form>
                            }
                        }
                    </div>
                    <div class="space-y-4">
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Store Name</h3>
                            <p class="text-lg text-gray-900">@Model.Seller.StoreName</p>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Store Description</h3>
                            <p class="text-gray-900">@Model.Seller.StoreDescription</p>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Store Address</h3>
                            <p class="text-gray-900">@Model.Seller.StoreAddress</p>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Email</h3>
                            <p class="text-gray-900">@Model.Seller.Email</p>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Phone</h3>
                            <p class="text-gray-900">@Model.Seller.PhoneNumber</p>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Trust Score</h3>
                            <div class="flex items-center">
                                <span class="text-yellow-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.799-2.034c-.784-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                    </svg>
                                </span>
                                <span class="ml-1 text-gray-900">@Model.Seller.TrustScore.ToString("F1")</span>
                            </div>
                        </div>
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Followers</h3>
                            <p class="text-gray-900">@Model.Seller.FollowersCount</p>
                        </div>
                    </div>
                </div>

                <div class="bg-gray-50 p-6 rounded-lg shadow-sm">
                    <h2 class="text-xl font-semibold mb-4">Statistics</h2>
                    <div class="space-y-4">
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Total Products</h3>
                            <p class="text-lg text-gray-900">@(Model.Products?.Count ?? 0)</p>
                        </div>
                    </div>
                </div>

                <!-- Simple Followers Section -->
                @if (Model.FollowersList != null && Model.FollowersList.Any())
                {
                    <div class="bg-gray-50 p-6 rounded-lg shadow-sm">
                        <h2 class="text-xl font-semibold mb-4">Followers (@Model.FollowersList.Count)</h2>
                        <div class="space-y-2">
                            @foreach (var follower in Model.FollowersList.Take(5))
                            {
                                <a href="@Url.Action("PublicProfile", "BuyerProfile", new { id = follower.Id })" 
                                   class="flex items-center space-x-3 py-2 px-3 rounded-lg hover:bg-gray-100 transition-colors duration-200 block">
                                    <div class="flex-shrink-0">
                                        @{
                                            string avatarText = !string.IsNullOrEmpty(follower.FirstName) ? 
                                                follower.FirstName.Substring(0, 1).ToUpper() : "?";
                                        }
                                        <div class="h-8 w-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium">
                                            @avatarText
                                        </div>
                                    </div>
                                    <div class="min-w-0 flex-1">
                                        <p class="text-sm font-medium text-gray-900 truncate hover:text-blue-600">
                                            @follower.FirstName @follower.LastName
                                        </p>
                                        @if (!string.IsNullOrEmpty(follower.Email))
                                        {
                                            <p class="text-xs text-gray-500 truncate">@follower.Email</p>
                                        }
                                    </div>
                                    <div class="flex-shrink-0">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </div>
                                </a>
                            }
                            @if (Model.FollowersList.Count > 5)
                            {
                                <div class="pt-2 border-t border-gray-200">
                                    <p class="text-sm text-gray-500 text-center">
                                        +@(Model.FollowersList.Count - 5) more followers
                                    </p>
                                </div>
                            }
                        </div>
                    </div>
                }
                else if (Model.FollowersList != null)
                {
                    <div class="bg-gray-50 p-6 rounded-lg shadow-sm">
                        <h2 class="text-xl font-semibold mb-4">Followers (0)</h2>
                        <p class="text-gray-500 text-sm">No followers yet.</p>
                    </div>
                }
            </div>

            <!-- Right Column: Products -->
            <div class="md:col-span-2">
                <div class="mb-4 flex justify-between items-center">
                    <h2 class="text-xl font-semibold">@(isOwnProfile ? "Your Products" : "Products")</h2>
                    <div class="flex space-x-4">
                        <div class="relative">
                            <input id="productSearchInput"
                                   type="text"
                                   placeholder="Search products..."
                                   class="border rounded-lg px-4 py-2 w-64"
                                   value="@Model.SearchText">
                        </div>
                        <button id="sortButton" class="inline-flex items-center px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z" />
                            </svg>
                            Sort by Price
                        </button>
                    </div>
                </div>

                <div id="productsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    @await Html.PartialAsync("_ProductsListPartial", Model)
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var sellerId = @(profileSellerId?.ToString() ?? "null");
            var isManageMode = @(isOwnProfile ? "true" : "false");
            
            // Handle product search
            $('#productSearchInput').on('keyup', function() {
                const searchText = $(this).val();
                var requestData = { searchText: searchText };
                
                // Add sellerId for public profiles
                if (sellerId !== null) {
                    requestData.sellerId = sellerId;
                } else {
                    // For private profiles, indicate if we're in manage mode
                    requestData.isManageMode = isManageMode;
                }
                
                $.ajax({
                    url: '@Url.Action("FilterProducts", "SellerProfile")',
                    type: 'POST',
                    data: requestData,
                    success: function(result) {
                        $('#productsContainer').html(result);
                    }
                });
            });

            // Handle product sorting
            $('#sortButton').on('click', function() {
                var requestData = {};
                
                // Add sellerId for public profiles
                if (sellerId !== null) {
                    requestData.sellerId = sellerId;
                } else {
                    // For private profiles, indicate if we're in manage mode
                    requestData.isManageMode = isManageMode;
                }
                
                $.ajax({
                    url: '@Url.Action("SortProducts", "SellerProfile")',
                    type: 'POST',
                    data: requestData,
                    success: function(result) {
                        $('#productsContainer').html(result);
                    }
                });
            });
        });
    </script>
}
