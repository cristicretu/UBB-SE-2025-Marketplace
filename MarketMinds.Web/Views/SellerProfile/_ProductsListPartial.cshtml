@model WebMarketplace.Models.SellerProfileViewModel

@if (Model.Products != null && Model.Products.Any())
{
    foreach (var product in Model.Products)
    {
        var detailsUrl = Url.Action("Details", 
                                  product is MarketMinds.Shared.Models.AuctionProduct ? "AuctionProducts" : 
                                  product is MarketMinds.Shared.Models.BorrowProduct ? "BorrowProducts" : "BuyProducts", 
                                  new { id = product.Id });
        <div class="bg-white border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all duration-200 hover:border-blue-300 group">
            <div class="p-4">
                <div class="flex justify-between items-start mb-2">
                    <h3 class="text-lg font-semibold text-gray-900 truncate flex-1 mr-2">
                        <a href="@detailsUrl" 
                           class="text-gray-900 hover:text-blue-600 transition-colors group-hover:text-blue-600">
                            @product.Title
                        </a>
                    </h3>
                    @{
                        bool showEditButtons = ViewBag.IsOwnProfile != null && (bool)ViewBag.IsOwnProfile == true;
                    }
                    @if (showEditButtons)
                    {
                        <div class="flex space-x-2 flex-shrink-0">
                            <a href="#" class="text-blue-600 hover:text-blue-800 transition-colors" title="Edit Product">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                </svg>
                            </a>
                            <a href="#" class="text-red-600 hover:text-red-800 transition-colors" title="Delete Product">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                            </a>
                        </div>
                    }
                </div>
                <p class="text-sm text-gray-600 mb-3">@(product.Description?.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)</p>
                <div class="flex justify-between items-center pt-2 mb-3">
                    @{
                        string priceString = "N/A";
                        string priceLabel = "Price";
                        if (product is MarketMinds.Shared.Models.BuyProduct buyProduct)
                        {
                            priceString = buyProduct.Price.ToString("F2");
                        }
                        else if (product is MarketMinds.Shared.Models.AuctionProduct auctionProduct)
                        {
                            priceString = auctionProduct.CurrentPrice.ToString("F2");
                            priceLabel = "Current Bid";
                        }
                        else if (product is MarketMinds.Shared.Models.BorrowProduct borrowProduct)
                        {
                            priceString = borrowProduct.DailyRate.ToString("F2");
                            priceLabel = "Daily Rate";
                        }
                        else
                        {
                            priceString = product.Price.ToString("F2");
                        }
                    }
                    <div class="flex flex-col">
                        <span class="text-xs text-gray-500">@priceLabel</span>
                        <span class="text-lg font-bold text-gray-900">$@priceString</span>
                    </div>
                    
                    @* Only show stock for BuyProduct types *@
                    @if (product is MarketMinds.Shared.Models.BuyProduct buyProductForStock)
                    {
                        <div class="flex flex-col text-right">
                            <span class="text-xs text-gray-500">Stock</span>
                            <span class="text-sm font-medium text-gray-700">@buyProductForStock.Stock</span>
                        </div>
                    }
                </div>
                
                <div class="flex items-center justify-between">
                    @{
                        // Determine product type from the class name
                        string productType = product.GetType().Name;
                        string badgeColor = "bg-blue-100 text-blue-800";
                        if (productType.EndsWith("Product"))
                        {
                            productType = productType.Substring(0, productType.Length - "Product".Length);
                        }
                        
                        // Set different colors for different product types
                        switch (productType.ToLower())
                        {
                            case "auction":
                                badgeColor = "bg-purple-100 text-purple-800";
                                break;
                            case "borrow":
                                badgeColor = "bg-green-100 text-green-800";
                                break;
                            case "buy":
                            default:
                                badgeColor = "bg-blue-100 text-blue-800";
                                break;
                        }
                    }
                    <span class="px-2 py-1 @badgeColor text-xs font-medium rounded-full">
                        @productType
                    </span>
                    
                    <a href="@detailsUrl" 
                       class="inline-flex items-center px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-md transition-colors duration-200 group-hover:bg-blue-700">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        View Details
                    </a>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="col-span-3 text-center py-12">
        <div class="mx-auto w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4">
            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
            </svg>
        </div>
        <p class="text-gray-500 text-lg font-medium">No products found</p>
        <p class="text-gray-400 text-sm mt-1">@(ViewBag.IsOwnProfile == true ? "Add some products to your store to get started." : "This seller hasn't added any products yet.")</p>
    </div>
}
