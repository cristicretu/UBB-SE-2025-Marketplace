@model WebMarketplace.Models.BillingInfoViewModel

@{
    ViewData["Title"] = "Billing Information";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 flex items-center">
                <svg class="w-8 h-8 mr-3 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                </svg>
                Checkout
            </h1>
            <p class="text-gray-600 mt-2">Complete your purchase</p>
        </div>

        <div class="lg:grid lg:grid-cols-12 lg:gap-x-8">
            <!-- Left Column - Billing Information -->
            <div class="lg:col-span-7">
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
                    <!-- Auto-fill Option -->
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-xl font-semibold text-gray-900">Billing Information</h2>
                        <div class="flex items-center space-x-3">
                            <input type="checkbox" id="fillFromDatabase" 
                                   class="h-4 w-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2" 
                                   checked />
                            <label for="fillFromDatabase" class="text-sm font-medium text-gray-700 cursor-pointer">
                                Use saved information
                            </label>
                        </div>
                    </div>
                    
                    <form asp-action="BillingInfo" method="post" class="space-y-6">
                        <input type="hidden" asp-for="OrderHistoryID" />
                        
                        <!-- Personal Information -->
                        <div class="space-y-4">
                            <div>
                                <label for="FullName" class="block text-sm font-medium text-gray-700 mb-2">
                                    Full Name *
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                    <input asp-for="FullName" 
                                           class="block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                           placeholder="Enter your full name" />
                                </div>
                                <span asp-validation-for="FullName" class="text-red-500 text-sm mt-1 block"></span>
                            </div>
                            
                            <div>
                                <label for="Email" class="block text-sm font-medium text-gray-700 mb-2">
                                    Email Address *
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
                                        </svg>
                                    </div>
                                    <input asp-for="Email" type="email"
                                           class="block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                           placeholder="Enter your email address" />
                                </div>
                                <span asp-validation-for="Email" class="text-red-500 text-sm mt-1 block"></span>
                            </div>
                            
                            <div>
                                <label for="PhoneNumber" class="block text-sm font-medium text-gray-700 mb-2">
                                    Phone Number *
                                </label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                        </svg>
                                    </div>
                                    <input asp-for="PhoneNumber" type="tel"
                                           class="block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                           placeholder="Enter your phone number" />
                                </div>
                                <span asp-validation-for="PhoneNumber" class="text-red-500 text-sm mt-1 block"></span>
                            </div>
                        </div>

                        <!-- Shipping Address -->
                        <div class="border-t border-gray-200 pt-6">
                            <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                </svg>
                                Shipping Address
                            </h3>
                            <div class="space-y-4">
                                <div>
                                    <label for="Address" class="block text-sm font-medium text-gray-700 mb-2">
                                        Street Address *
                                    </label>
                                    <input asp-for="Address" 
                                           class="block w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                           placeholder="Enter your street address" />
                                    <span asp-validation-for="Address" class="text-red-500 text-sm mt-1 block"></span>
                                </div>
                                
                                <div>
                                    <label for="ZipCode" class="block text-sm font-medium text-gray-700 mb-2">
                                        Postal Code *
                                    </label>
                                    <input asp-for="ZipCode" 
                                           class="block w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                                           placeholder="Enter postal code" />
                                    <span asp-validation-for="ZipCode" class="text-red-500 text-sm mt-1 block"></span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Payment Information -->
                        <div class="border-t border-gray-200 pt-6">
                            <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                                </svg>
                                Payment Method
                            </h3>
                            
                            <div class="space-y-3">
                                @if (Model.IsCashEnabled)
                                {
                                    <div class="relative">
                                        <input type="radio" asp-for="SelectedPaymentMethod" value="cash" id="cash-payment" 
                                               class="peer sr-only" />
                                        <label for="cash-payment" 
                                               class="flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50 peer-checked:border-blue-500 peer-checked:bg-blue-50 peer-checked:ring-2 peer-checked:ring-blue-500 transition-all">
                                            <div class="flex items-center">
                                                <div class="w-5 h-5 border-2 border-gray-300 rounded-full peer-checked:border-blue-500 peer-checked:bg-blue-500 relative">
                                                    <div class="absolute inset-0 rounded-full peer-checked:bg-blue-500"></div>
                                                </div>
                                                <svg class="w-6 h-6 ml-3 mr-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                                </svg>
                                                <div>
                                                    <p class="font-medium text-gray-900">Cash Payment</p>
                                                    <p class="text-sm text-gray-500">Pay cash on delivery</p>
                                                </div>
                                            </div>
                                        </label>
                                    </div>
                                }
                                
                                @if (Model.IsCardEnabled)
                                {
                                    <div class="relative">
                                        <input type="radio" asp-for="SelectedPaymentMethod" value="card" id="card-payment" 
                                               class="peer sr-only" />
                                        <label for="card-payment" 
                                               class="flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50 peer-checked:border-blue-500 peer-checked:bg-blue-50 peer-checked:ring-2 peer-checked:ring-blue-500 transition-all">
                                            <div class="flex items-center">
                                                <div class="w-5 h-5 border-2 border-gray-300 rounded-full peer-checked:border-blue-500 peer-checked:bg-blue-500 relative">
                                                    <div class="absolute inset-0 rounded-full peer-checked:bg-blue-500"></div>
                                                </div>
                                                <svg class="w-6 h-6 ml-3 mr-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                                                </svg>
                                                <div>
                                                    <p class="font-medium text-gray-900">Card Payment</p>
                                                    <p class="text-sm text-gray-500">Secure credit/debit card payment</p>
                                                </div>
                                            </div>
                                        </label>
                                    </div>
                                }
                                <span asp-validation-for="SelectedPaymentMethod" class="text-red-500 text-sm block"></span>
                            </div>
                        </div>
                        
                        <!-- Additional Information -->
                        <div class="border-t border-gray-200 pt-6">
                            <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"></path>
                                </svg>
                                Additional Delivery Instructions
                            </h3>
                            <textarea asp-for="AdditionalInfo" rows="4" 
                                      class="block w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none" 
                                      placeholder="Special delivery instructions, preferred delivery time, etc. (optional)"></textarea>
                        </div>
                        
                        <div class="border-t border-gray-200 pt-6">
                            <button type="submit" 
                                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-4 px-6 rounded-lg transition-colors shadow-sm flex items-center justify-center">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                Complete Order
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Right Column - Order Summary -->
            <div class="lg:col-span-5">
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 sticky top-8">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h2 class="text-lg font-semibold text-gray-900 flex items-center">
                            <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m5 0h2a2 2 0 002-2V9a2 2 0 00-2-2h-2m-5 4v6m5-6v6"></path>
                            </svg>
                            Order Summary
                        </h2>
                    </div>
                    
                    <!-- Product List -->
                    <div class="px-6 py-4 max-h-64 overflow-y-auto">
                        @if (Model.ProductList != null && Model.ProductList.Any())
                        {
                            <div class="space-y-4">
                                @foreach (var product in Model.ProductList)
                                {
                                    <div class="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                                        <div class="flex-shrink-0 w-12 h-12 bg-gray-200 rounded-lg flex items-center justify-center">
                                            <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm font-medium text-gray-900 truncate">@product.Title</p>
                                            @if (product is MarketMinds.Shared.Models.BuyProduct buyProduct)
                                            {
                                                <p class="text-sm text-blue-600 font-semibold">@((buyProduct.Price * buyProduct.Stock).ToString("0.00")) €</p>
                                            }
                                            else
                                            {
                                                <p class="text-sm text-blue-600 font-semibold">@(product.Price.ToString("0.00")) €</p>
                                            }
                                            
                                            @if (product.SellerId > 0)
                                            {
                                                <p class="text-xs text-gray-500">Seller ID: @product.SellerId</p>
                                            }
                                        </div>
                                    </div>
                                    
                                    @if (product is MarketMinds.Shared.Models.BorrowProduct)
                                    {
                                        <div class="mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200">
                                            <h4 class="text-sm font-medium text-blue-900 mb-3">Rental Period</h4>
                                            <div class="grid grid-cols-2 gap-3">
                                                <div>
                                                    <label class="block text-xs font-medium text-blue-700 mb-1">Start Date</label>
                                                    <input type="date" asp-for="StartDate" id="start-date-@product.Id" 
                                                           class="w-full px-2 py-1.5 text-sm border border-blue-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                           onchange="updateStartDate(this)" />
                                                </div>
                                                <div>
                                                    <label class="block text-xs font-medium text-blue-700 mb-1">End Date</label>
                                                    <input type="date" asp-for="EndDate" id="end-date-@product.Id" 
                                                           class="w-full px-2 py-1.5 text-sm border border-blue-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                           onchange="updateEndDate(this, @product.Id)" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-8">
                                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                                </svg>
                                <p class="text-gray-500 text-sm mt-2">No products in cart</p>
                            </div>
                        }
                    </div>
                    
                    <!-- Order Totals -->
                    <div class="px-6 py-4 border-t border-gray-200 space-y-3">
                        <div class="flex justify-between text-sm text-gray-600">
                            <span>Subtotal:</span>
                            <span>@Model.Subtotal.ToString("0.00") €</span>
                        </div>
                        <div class="flex justify-between text-sm text-gray-600">
                            <span>Warranty Tax:</span>
                            <span>@Model.WarrantyTax.ToString("0.00") €</span>
                        </div>
                        <div class="flex justify-between text-sm text-gray-600">
                            <span>Delivery Fee:</span>
                            <span>@Model.DeliveryFee.ToString("0.00") €</span>
                        </div>
                        <div class="border-t border-gray-200 pt-3">
                            <div class="flex justify-between text-lg font-semibold text-gray-900">
                                <span>Total:</span>
                                <span>@Model.Total.ToString("0.00") €</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-fill from database functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Since checkbox is checked by default, fill form on page load
            if (document.getElementById('fillFromDatabase').checked) {
                fillFormFromDatabase();
            }
        });

        document.getElementById('fillFromDatabase').addEventListener('change', function() {
            if (this.checked) {
                fillFormFromDatabase();
            } else {
                clearFormFields();
            }
        });

        function fillFormFromDatabase() {
            fetch('/Checkout/GetBuyerBillingInfo')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Fill the form fields with data from database
                        document.querySelector('input[name="FullName"]').value = data.fullName || '';
                        document.querySelector('input[name="Email"]').value = data.email || '';
                        document.querySelector('input[name="PhoneNumber"]').value = data.phoneNumber || '';
                        document.querySelector('input[name="Address"]').value = data.address || '';
                        document.querySelector('input[name="ZipCode"]').value = data.zipCode || '';
                        
                        showNotification('Information loaded successfully', 'success');
                    } else {
                        showNotification('Error loading billing information: ' + (data.message || 'Unknown error'), 'error');
                        // Uncheck the checkbox if there was an error
                        document.getElementById('fillFromDatabase').checked = false;
                    }
                })
                .catch(error => {
                    console.error('Error fetching billing info:', error);
                    showNotification('Error loading billing information. Please try again.', 'error');
                    // Uncheck the checkbox if there was an error
                    document.getElementById('fillFromDatabase').checked = false;
                });
        }

        function clearFormFields() {
            // Clear all the form fields
            document.querySelector('input[name="FullName"]').value = '';
            document.querySelector('input[name="Email"]').value = '';
            document.querySelector('input[name="PhoneNumber"]').value = '';
            document.querySelector('input[name="Address"]').value = '';
            document.querySelector('input[name="ZipCode"]').value = '';
            
            showNotification('Form fields cleared', 'info');
        }

        function updateStartDate(element) {
            // Update start date
            const startDate = new Date(element.value);
            // You can add AJAX call here to update the model if needed
        }
        
        function updateEndDate(element, productId) {
            // Update end date
            const endDate = new Date(element.value);
            // Send AJAX request to update borrowed product tax
            updateBorrowedProductTax(productId);
        }
        
        function updateBorrowedProductTax(productId) {
            // AJAX call to update the borrowed product tax
            const startDate = document.getElementById(`start-date-${productId}`).value;
            const endDate = document.getElementById(`end-date-${productId}`).value;
            
            fetch(`/Checkout/UpdateBorrowedTax?productId=${productId}&startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Refresh the page or update the values via DOM manipulation
                        window.location.reload();
                    }
                })
                .catch(error => console.error('Error updating borrowed tax:', error));
        }

        // Simple notification function
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 max-w-sm w-full bg-white border border-gray-200 rounded-lg shadow-lg p-4 ${type === 'error' ? 'border-red-200' : type === 'success' ? 'border-green-200' : 'border-blue-200'}`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        ${type === 'error' ? 
                            '<svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>' :
                            type === 'success' ?
                            '<svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>' :
                            '<svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>'
                        }
                    </div>
                    <div class="ml-3 w-0 flex-1">
                        <p class="text-sm font-medium text-gray-900">${message}</p>
                    </div>
                    <div class="ml-4 flex-shrink-0 flex">
                        <button class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500" onclick="this.closest('.fixed').remove()">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 5000);
        }
    </script>
} 