@model WebMarketplace.Models.BillingInfoViewModel

@{
    ViewData["Title"] = "Billing Information";
}

<div class="container mx-auto px-4 py-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Left Column - Billing Information -->
        <div class="space-y-6">
            <h2 class="text-2xl font-semibold text-gray-800">Billing Information</h2>
            
            <form asp-action="BillingInfo" method="post" class="space-y-4">
                <input type="hidden" asp-for="OrderHistoryID" />
                
                <div class="space-y-4">
                    <div>
                        <input asp-for="FullName" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Full Name*" />
                        <span asp-validation-for="FullName" class="text-red-500 text-sm"></span>
                    </div>
                    
                    <div>
                        <input asp-for="Email" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Email Address*" />
                        <span asp-validation-for="Email" class="text-red-500 text-sm"></span>
                    </div>
                    
                    <div>
                        <input asp-for="PhoneNumber" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Phone Number*" />
                        <span asp-validation-for="PhoneNumber" class="text-red-500 text-sm"></span>
                    </div>
                    
                    <div>
                        <input asp-for="Address" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Address*" />
                        <span asp-validation-for="Address" class="text-red-500 text-sm"></span>
                    </div>
                    
                    <div>
                        <input asp-for="ZipCode" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Zipcode*" />
                        <span asp-validation-for="ZipCode" class="text-red-500 text-sm"></span>
                    </div>
                </div>
                
                <!-- Payment Information -->
                <div class="mt-6 space-y-4">
                    <h2 class="text-2xl font-semibold text-gray-800">Payment Information</h2>
                    
                    <div class="space-y-2">
                        @if (Model.IsCashEnabled)
                        {
                            <div class="flex items-center space-x-2">
                                <input type="radio" asp-for="SelectedPaymentMethod" value="cash" id="cash-payment" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500" />
                                <label for="cash-payment" class="text-gray-700">Cash Payment</label>
                            </div>
                        }
                        
                        @if (Model.IsCardEnabled)
                        {
                            <div class="flex items-center space-x-2">
                                <input type="radio" asp-for="SelectedPaymentMethod" value="card" id="card-payment" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500" />
                                <label for="card-payment" class="text-gray-700">Card Payment</label>
                            </div>
                        }
                        
                        @if (Model.IsWalletEnabled)
                        {
                            <div class="flex items-center space-x-2">
                                <input type="radio" asp-for="SelectedPaymentMethod" value="wallet" id="wallet-payment" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500" />
                                <label for="wallet-payment" class="text-gray-700">Wallet Payment</label>
                            </div>
                        }
                        <span asp-validation-for="SelectedPaymentMethod" class="text-red-500 text-sm"></span>
                    </div>
                </div>
                
                <!-- Additional Information -->
                <div class="mt-6 space-y-4">
                    <h2 class="text-2xl font-semibold text-gray-800">Additional Delivery Information</h2>
                    <textarea asp-for="AdditionalInfo" rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Observations for your order (optional)..."></textarea>
                </div>
                
                <div class="mt-6">
                    <button type="submit" class="w-full md:w-auto px-6 py-3 bg-blue-800 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        Finalize Purchase
                    </button>
                </div>
            </form>
        </div>
        
        <!-- Right Column - Order Summary -->
        <div class="space-y-6">
            <h2 class="text-2xl font-semibold text-gray-800">Order Summary</h2>
            
            <!-- Product List -->
            <div class="bg-gray-100 rounded-lg p-4 space-y-4">
                @if (Model.ProductList != null && Model.ProductList.Any())
                {
                    foreach (var product in Model.ProductList)
                    {
                        <div class="border-b border-gray-200 pb-4 mb-4 last:border-b-0 last:pb-0 last:mb-0">
                            <p class="font-semibold text-gray-800">Product name: <span class="font-normal">@product.Name</span></p>
                            <p class="font-semibold text-gray-800">Price: <span class="font-normal">@product.Price.ToString("C")</span></p>
                            
                            @if (product.SellerId > 0)
                            {
                                <p class="font-semibold text-gray-800">Seller ID: <span class="font-normal">@product.SellerId</span></p>
                            }
                            
                            @if (product.ProductType == "borrowed")
                            {
                                <div class="mt-2 space-y-2">
                                    <div class="grid grid-cols-2 gap-2">
                                        <label class="font-semibold text-gray-800">Start Date:</label>
                                        <input type="date" asp-for="StartDate" id="start-date-@product.ProductId" 
                                               class="px-2 py-1 border border-gray-300 rounded"
                                               onchange="updateStartDate(this)" />
                                    </div>
                                    <div class="grid grid-cols-2 gap-2">
                                        <label class="font-semibold text-gray-800">End Date:</label>
                                        <input type="date" asp-for="EndDate" id="end-date-@product.ProductId" 
                                               class="px-2 py-1 border border-gray-300 rounded"
                                               onchange="updateEndDate(this, @product.ProductId)" />
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <p class="text-gray-600">No products in cart</p>
                }
            </div>
            
            <!-- Order Totals -->
            <div class="space-y-2">
                <div class="flex justify-between">
                    <span class="text-gray-800">Subtotal:</span>
                    <span class="text-gray-800">@Model.Subtotal.ToString("C")</span>
                </div>
                <div class="flex justify-between">
                    <span class="text-gray-800">Warranty Tax:</span>
                    <span class="text-gray-800">@Model.WarrantyTax.ToString("C")</span>
                </div>
                <div class="flex justify-between">
                    <span class="text-gray-800">Delivery fee:</span>
                    <span class="text-gray-800">@Model.DeliveryFee.ToString("C")</span>
                </div>
                <div class="flex justify-between font-semibold">
                    <span class="text-gray-800">Total:</span>
                    <span class="text-gray-800">@Model.Total.ToString("C")</span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStartDate(element) {
            // Update start date
            const startDate = new Date(element.value);
            // You can add AJAX call here to update the model if needed
        }
        
        function updateEndDate(element, productId) {
            // Update end date
            const endDate = new Date(element.value);
            // Send AJAX request to update borrowed product tax
            updateBorrowedProductTax(productId);
        }
        
        function updateBorrowedProductTax(productId) {
            // AJAX call to update the borrowed product tax
            const startDate = document.getElementById(`start-date-${productId}`).value;
            const endDate = document.getElementById(`end-date-${productId}`).value;
            
            fetch(`/Checkout/UpdateBorrowedTax?productId=${productId}&startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Refresh the page or update the values via DOM manipulation
                        window.location.reload();
                    }
                })
                .catch(error => console.error('Error updating borrowed tax:', error));
        }
    </script>
} 